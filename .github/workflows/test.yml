name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.10.8
  POETRY_VERSION: 1.2.2

jobs:
  flake8:
    name: Flake8
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ "3.10", "3.9" ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Run pip install
        run: python -m pip install 'flake8>=5.0.4'
      - name: Style Test
        id: test
        run: |
          python -m flake8 --max-line-length=120 faapi

  mypy:
    name: mypy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ "3.10", "3.9" ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Run pip install
        run: python -m pip install 'mypy>=0.982' 'pytest>=7.2.0' 'types-beautifulsoup4>=4.11.6'
      - name: Types test
        id: test
        run: |
          python -m mypy --install-types --non-interactive faapi
          python -m mypy --install-types --non-interactive tests

  pytest:
    name: pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - run: |
          poetry install
      - name: Unit test
        env:
          TEST_DATA: ${{ secrets.TEST_DATA }}
          TEST_USER: ${{ secrets.TEST_USER }}
          TEST_SUBMISSION: ${{ secrets.TEST_SUBMISSION }}
          TEST_JOURNAL: ${{ secrets.TEST_JOURNAL }}
        run: |
          echo "$TEST_DATA" > tests/test_data.json
          echo "$TEST_USER" > tests/test_user.json
          echo "$TEST_SUBMISSION" > tests/test_submission.json
          echo "$TEST_JOURNAL" > tests/test_journal.json
          poetry run pytest tests/test_connection.py tests/test_parse.py tests/test_faapi.py -v --tb=line
